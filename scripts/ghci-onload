-- Install to ~/.ghc/ghci-onload

-- This file contains all commands which are run every time the
-- target set in GHCi is reset (i.e., after load/reload).

import Prelude.Unicode hiding ((∈))
import Prelude.Unicode.SR

-- Standard imports for interactive sessions. Customize freely.
import Control.Monad
import Control.Monad.Unicode
import Control.Applicative
import System.IO
import Data.Maybe
import Data.Monoid
import qualified Data.Traversable as Trav
import qualified Data.Foldable as Fold
import Data.Set (Set)
import qualified Data.Set  as Set
import Data.Sequence (Seq)
import qualified Data.Sequence  as Seq
import Data.Map (Map)
import qualified Data.Map  as Map
import Data.IntMap (IntMap)
import qualified Data.IntMap as IntMap
import qualified Data.List as List
import Data.Text (Text)
import qualified Data.Text as Text
import Text.Printf (printf)
import qualified Text.Printf as Printf

-- For the interactive pretty printer.
import GHC.GHCi.SR

-- This redefines :load and :reload so that after adding the file to the
-- target set, all standard bindings (including custom interactive print)
-- are set-up again.
:{
   let myLoad ∷ String → IO String
       myLoad f = do
         return (importCmd ⧺ scriptReload ⧺ iPrint)
             where importCmd = "::load " ⧺ f ⧺ "\n"
                   scriptReload = ":source /home/seb/.ghc/ghci-onload\n"
                   iPrint = ":set -interactive-print=myPrint\n"
:}

:{
   let myReload ∷ String → IO String
       myReload _ = do
         return (importCmd ⧺ scriptReload ⧺ iPrint)
             where importCmd = "::reload\n"
                   scriptReload = ":source /home/seb/.ghc/ghci-onload\n"
                   iPrint = ":set -interactive-print=myPrint\n"
:}
